exp(cbind(coef(modelo_aic),confint.default(modelo_aic)))
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
library(tidyverse)
library(magrittr)
library(caret)
library(pROC)
library(ROCR)
library(glmulti)
library(DescTools)
download.file("https://archive.ics.uci.edu/static/public/17/breast+cancer+wisconsin+diagnostic.zip", "data/breast+cancer+wisconsin+diagnostic.zip")
unzip("data/breast+cancer+wisconsin+diagnostic.zip", exdir = "data")
cmama <- read.csv ("data/wdbc.data", header = FALSE)
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media",
"dimension_fractal_media")
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
glimpse(cmama2)
cmama2 %>%
ggplot(aes(x = factor(diagnostico), fill = factor(diagnostico))) +
geom_bar() +
theme_minimal() +
theme(legend.position = "none") +
geom_text(stat = "count", aes(label = ..count..), vjust = 2)
cmama2 %>%
gather(key = "variable", value = "value", -diagnostico) %>%
ggplot(aes(x = value, fill = factor(diagnostico))) +
geom_density(alpha = 0.5) +
facet_wrap(~variable, scales = "free") +
theme_minimal() +
theme(legend.position = "none")
anyNA (cmama2) #No hay valores faltantes
anyDuplicated (cmama2) #No hay elementos duplicados
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
gather(key = "variable2", value = "correlacion", -variable) %>%
transmute(variables=paste(pmin(variable, variable2), "-", pmax(variable, variable2)), correlacion) %>%
distinct() %>%
filter(correlacion > 0.7, correlacion < 1) %>%
arrange(desc(correlacion))
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
stepwise(modelo)
cmama3 <- cmama2[, c(1, 3, 5, 9)]
modelo_aic <- glm(diagnostico ~ ., family = binomial(link = "logit"), cmama3)
summary(modelo_aic)
vif(modelo_aic)
exp(cbind(coef(modelo_aic),confint.default(modelo_aic)))
PseudoR2(modelo_aic, which = c("Nagelkerke"))
HosmerLemeshowTest(fit = fitted(modelo_aic), obs = cmama3$diagnostico)
referencia <- cmama3$diagnostico
prediccion <- predict(modelo_aic, type="response")
curva <- roc(referencia, prediccion)
plot(1-curva$specificities, curva$sensitivities, type="l",xlab="1-Especificidad",ylab="Sensibilidad",lwd=2,col="blue",xaxs="i",yaxs="i")
segments(0,0,1,1,lwd=2,col="red")
# Area bajo la curva ROC
(areaRoc<-auc(referencia, prediccion)); ci(areaRoc)
(opt <- coords(curva, "best", ret=c("threshold", "specificity", "sensitivity", "accuracy",
"tn", "tp", "fn", "fp")))
# Según corte óptimo de corte por Youden
prediccion_clases <- ifelse(prediccion > opt$threshold, 1, 0)
confusionMatrix(data = factor(prediccion_clases), reference = factor(cmama3$diagnostico), positive = "1")
curve(dchisq(3.4834, 10-2), from = , to = , xlab = "Estadístico Hosmer-Lemeshow C", ylab = "Densidad de Probabilidad", main = "Prueba de Hipótesis de Bondad de Ajuste Hosmer-Lemeshow con el estadístico C")
curve(dchisq(3.4834, 10-2), xlab = "Estadístico Hosmer-Lemeshow C", ylab = "Densidad de Probabilidad", main = "Prueba de Hipótesis de Bondad de Ajuste Hosmer-Lemeshow con el estadístico C")
curve(dchisq(cmama3$diagnostico, 10-2), xlab = "Estadístico Hosmer-Lemeshow C", ylab = "Densidad de Probabilidad", main = "Prueba de Hipótesis de Bondad de Ajuste Hosmer-Lemeshow con el estadístico C")
curve(dchisq(x = 3.4834, 10-2), xlab = "Estadístico Hosmer-Lemeshow C", ylab = "Densidad de Probabilidad", main = "Prueba de Hipótesis de Bondad de Ajuste Hosmer-Lemeshow con el estadístico C")
abline(v = 0, lty = 2)
x <- 3.4834
curve(dchisq(x, 10-2), xlab = "Estadístico Hosmer-Lemeshow C", ylab = "Densidad de Probabilidad", main = "Prueba de Hipótesis de Bondad de Ajuste Hosmer-Lemeshow con el estadístico C")
abline(v = 0, lty = 2)
alpha <- 0.05
class <- 10
df <- class - 2
chisq_bajo <- qchisq(alpha/2,df)
chisq_alto <- qchisq(1 - alpha/2, df)
chisq_bajo
chisq_alto
#P-valor
chicuadrado <- 3.4834
p_valor <- 2 * pchisq(-abs(chicuadrado), df) #A dos colas
p_valor
p_valor <- 2 * pchisq (abs(chicuadrado), df) #A dos colas
p_valor
#create density curve
x <- 3.4834
#create density curve
x <- 3.4834
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Distribución Chi-Cuadrado para la Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#create vector of x values
x_vector <- seq(10, 40)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, df = 10)
#fill in portion of the density plot from 0 to 40
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Distribución Chi-Cuadrado para la Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#create vector of x values
x_vector <- seq(10, 40)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#create vector of x values
x_vector <- seq(qchisq(0.05,8), 40)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#create vector of x values
x_vector <- seq(-qchisq(0.05,8), 40)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#create vector of x values
x_vector <- seq(qchisq(0.95,8), 40)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Distribución Chi-Cuadrado para la Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#create vector of x values
x_vector <- seq(qchisq(0.95,8), 40)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
abline(v = x)
abline(v = x, h = 0)
abline(v = x)
?MASS
??MASS
??hoslem.test
??hoslem.test()
#create density curve
x <- 3.4834
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Distribución Chi-Cuadrado para la Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#create vector of x values
x_teor <- seq(qchisq(0.95,8), 40)
#create vector of chi-square density values
p_vector <- dchisq(x_teor, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_teor, rev(x_teor)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#create density curve
x <- 3.4834
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Distribución Chi-Cuadrado para la Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#create vector of x values
x_teor <- seq(qchisq(0.95,8), 40)
#create vector of chi-square density values
p_vector <- dchisq(x_teor, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_teor, rev(x_teor)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('green', alpha=0.3), border = NA)
#create density curve
x <- 3.4834
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Distribución Chi-Cuadrado para la Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#create vector of x values
x_teor <- seq(qchisq(0.95,8), 40)
#create vector of chi-square density values
p_vector <- dchisq(x_teor, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_teor, rev(x_teor)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#create vector of x values
x_obs <- seq(x, 40)
#create vector of chi-square density values
p_vector <- dchisq(x_obs, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_obs, rev(x_obs)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('green', alpha=0.3), border = NA)
#create density curve
x <- 3.4834
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#create vector of x values
x_teor <- seq(qchisq(0.95,8), 40)
#create vector of chi-square density values
p_vector <- dchisq(x_teor, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_teor, rev(x_teor)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#create vector of x values
x_obs <- seq(x, 40)
#create vector of chi-square density values
p_vector <- dchisq(x_obs, 8)
#fill in portion of the density plot from 0 to 40
polygon(c(x_obs, rev(x_obs)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('green', alpha=0.3), border = NA)
#Creación curva de densidad
x <- 3.4834
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#Crear vector de valores chi teoricos
x_teor <- seq(qchisq(0.95,8), 40)
#Crear vector de p-Valor
p_vector <- dchisq(x_teor, 8)
#Rellenado
polygon(c(x_teor, rev(x_teor)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#Crear vector de valor observado
x_obs <- seq(x, 40)
#Crear vector de p-Valor
p_vector <- dchisq(x_obs, 8)
#Rellenado
polygon(c(x_obs, rev(x_obs)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('green', alpha=0.3), border = NA)
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
library(tidyverse)
library(magrittr)
library(caret)
library(pROC)
library(ROCR)
library(glmulti)
library(DescTools)
download.file("https://archive.ics.uci.edu/static/public/17/breast+cancer+wisconsin+diagnostic.zip", "data/breast+cancer+wisconsin+diagnostic.zip")
unzip("data/breast+cancer+wisconsin+diagnostic.zip", exdir = "data")
cmama <- read.csv ("data/wdbc.data", header = FALSE)
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media",
"dimension_fractal_media")
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
glimpse(cmama2)
cmama2 %>%
ggplot(aes(x = factor(diagnostico), fill = factor(diagnostico))) +
geom_bar() +
theme_minimal() +
theme(legend.position = "none") +
geom_text(stat = "count", aes(label = ..count..), vjust = 2)
cmama2 %>%
gather(key = "variable", value = "value", -diagnostico) %>%
ggplot(aes(x = value, fill = factor(diagnostico))) +
geom_density(alpha = 0.5) +
facet_wrap(~variable, scales = "free") +
theme_minimal() +
theme(legend.position = "none")
anyNA (cmama2) #No hay valores faltantes
anyDuplicated (cmama2) #No hay elementos duplicados
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
gather(key = "variable2", value = "correlacion", -variable) %>%
transmute(variables=paste(pmin(variable, variable2), "-", pmax(variable, variable2)), correlacion) %>%
distinct() %>%
filter(correlacion > 0.7, correlacion < 1) %>%
arrange(desc(correlacion))
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
stepwise(modelo)
cmama3 <- cmama2[, c(1, 3, 5, 9)]
modelo_aic <- glm(diagnostico ~ ., family = binomial(link = "logit"), cmama3)
summary(modelo_aic)
vif(modelo_aic)
exp(cbind(coef(modelo_aic),confint.default(modelo_aic)))
PseudoR2(modelo_aic, which = c("Nagelkerke"))
HosmerLemeshowTest(fit = fitted(modelo_aic), obs = cmama3$diagnostico)
#Creación curva de densidad
x <- 3.4834
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#Crear vector de valores chi teoricos
x_teor <- seq(qchisq(0.95,8), 40)
#Crear vector de p-Valor
p_vector <- dchisq(x_teor, 8)
#Rellenado
polygon(c(x_teor, rev(x_teor)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#Crear vector de valor observado
x_obs <- seq(x, 40)
#Crear vector de p-Valor
p_vector <- dchisq(x_obs, 8)
#Rellenado
polygon(c(x_obs, rev(x_obs)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('green', alpha=0.3), border = NA)
referencia <- cmama3$diagnostico
prediccion <- predict(modelo_aic, type="response")
curva <- roc(referencia, prediccion)
plot(1-curva$specificities, curva$sensitivities, type="l",xlab="1-Especificidad",ylab="Sensibilidad",lwd=2,col="blue",xaxs="i",yaxs="i")
segments(0,0,1,1,lwd=2,col="red")
# Area bajo la curva ROC
(areaRoc<-auc(referencia, prediccion)); ci(areaRoc)
(opt <- coords(curva, "best", ret=c("threshold", "specificity", "sensitivity", "accuracy",
"tn", "tp", "fn", "fp")))
# Según corte óptimo de corte por Youden
prediccion_clases <- ifelse(prediccion > opt$threshold, 1, 0)
confusionMatrix(data = factor(prediccion_clases), reference = factor(cmama3$diagnostico), positive = "1")
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
library(tidyverse)
library(magrittr)
library(caret)
library(pROC)
library(ROCR)
library(glmulti)
library(DescTools)
download.file("https://archive.ics.uci.edu/static/public/17/breast+cancer+wisconsin+diagnostic.zip", "data/breast+cancer+wisconsin+diagnostic.zip")
unzip("data/breast+cancer+wisconsin+diagnostic.zip", exdir = "data")
cmama <- read.csv ("data/wdbc.data", header = FALSE)
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media",
"dimension_fractal_media")
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
glimpse(cmama2)
cmama2 %>%
ggplot(aes(x = factor(diagnostico), fill = factor(diagnostico))) +
geom_bar() +
theme_minimal() +
theme(legend.position = "none") +
geom_text(stat = "count", aes(label = ..count..), vjust = 2)
cmama2 %>%
gather(key = "variable", value = "value", -diagnostico) %>%
ggplot(aes(x = value, fill = factor(diagnostico))) +
geom_density(alpha = 0.5) +
facet_wrap(~variable, scales = "free") +
theme_minimal() +
theme(legend.position = "none")
anyNA (cmama2) #No hay valores faltantes
anyDuplicated (cmama2) #No hay elementos duplicados
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
gather(key = "variable2", value = "correlacion", -variable) %>%
transmute(variables=paste(pmin(variable, variable2), "-", pmax(variable, variable2)), correlacion) %>%
distinct() %>%
filter(correlacion > 0.7, correlacion < 1) %>%
arrange(desc(correlacion))
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
stepwise(modelo)
cmama3 <- cmama2[, c(1, 3, 5, 9)]
modelo_aic <- glm(diagnostico ~ ., family = binomial(link = "logit"), cmama3)
summary(modelo_aic)
vif(modelo_aic)
exp(cbind(coef(modelo_aic),confint.default(modelo_aic)))
PseudoR2(modelo_aic, which = c("Nagelkerke"))
HosmerLemeshowTest(fit = fitted(modelo_aic), obs = cmama3$diagnostico)$C
#Creación curva de densidad
x <- 3.4834
curve(dchisq(x, 8), from = 0, to = 40,
main = 'Prueba de Bondad de Ajuste Hosmer-Lemeshow (gl = 8)', xlab = 'Estadístico C',
ylab = 'Densidad de Probabilidad',
lwd = 2)
#Crear vector de valores chi teoricos
x_teor <- seq(qchisq(0.95,8), 40)
#Crear vector de p-Valor
p_vector <- dchisq(x_teor, 8)
#Rellenado
polygon(c(x_teor, rev(x_teor)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('red', alpha=0.3), border = NA)
#Crear vector de valor observado
x_obs <- seq(x, 40)
#Crear vector de p-Valor
p_vector <- dchisq(x_obs, 8)
#Rellenado
polygon(c(x_obs, rev(x_obs)), c(p_vector, rep(0, length(p_vector))),
col = adjustcolor('green', alpha=0.3), border = NA)
referencia <- cmama3$diagnostico
prediccion <- predict(modelo_aic, type="response")
curva <- roc(referencia, prediccion)
plot(1-curva$specificities, curva$sensitivities, type="l",xlab="1-Especificidad",ylab="Sensibilidad",lwd=2,col="blue",xaxs="i",yaxs="i")
segments(0,0,1,1,lwd=2,col="red")
# Area bajo la curva ROC
(areaRoc<-auc(referencia, prediccion)); ci(areaRoc)
(opt <- coords(curva, "best", ret=c("threshold", "specificity", "sensitivity", "accuracy",
"tn", "tp", "fn", "fp")))
# Según corte óptimo de corte por Youden
prediccion_clases <- ifelse(prediccion > opt$threshold, 1, 0)
confusionMatrix(data = factor(prediccion_clases), reference = factor(cmama3$diagnostico), positive = "1")
library(corrplot)
library(olsrr)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
library(tidyverse)
library(tidyverse)
library(magrittr)
library(caret)
library(caret)
library(pROC)
library(ROCR)
library(glmulti)
library(DescTools)
