load("C:/Users/assaf/OneDrive/Documents/GitHub/TP-Reg-Log/.RData")
rm(list = ls())
library(corrplot)
library(olsrr)
library(wooldridge)
source("~/GitHub/TP-Reg-Log/Cancer de mama - Sueño.R", echo=TRUE)
cmama <- read.csv("data.csv")
View(cmama)
cmama2 <- cmama[,c(2:12)] #Recorte de datos
colnames(cmama2) #Lista de variables
colnames(cmama2) <- c("diagnostico", "radio_medio", "textura_media",  "perimetro_medio","area_media", "uniformidad_media", "compactabilidad_media", "concavidad_media", "puntos.concavos_medios", "simetria_media", "dimension_fractal_media")
colnames(cmama2)
cmama2
library(car)
scatterplotMatrix(cmama2)
class(cmama2)
class(cmama2$diagnostico)
cmama2$diagnostico <- factor(cmama2$diagnostico,
levels = c("B", "M"),
labels = c(0, 1))
class(cmama2$diagnostico)
scatterplotMatrix(cmama2)
scatterplotMatrix(cmama2)
scatterplotMatrix(cmama2, pch = 19)
colnames(cmama2)
colnames(cmama2)
rm(list = ls())
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
cmama <- read.csv("data.csv")
View(cmama)
cmama2 <- cmama[,c(2:12)] #Recorte de datos
colnames(cmama2) #Lista de variables
colnames(cmama2) <- c("diagnostico", "radio_medio", "textura_media",  "perimetro_medio","area_media", "uniformidad_media", "compactabilidad_media", "concavidad_media", "puntos.concavos_medios", "simetria_media", "dimension_fractal_media")
cmama2
colnames(cmama2)
##Valores duplicados
cmama2[duplicated(cmama2$id), "id"] #NO hay
is.na.data.frame(cmama2)
is.na(cmama2)
anyNA(cmama2)
duplicated.data.frame(cmama2)
anyDuplicated(cmama2)
anyDuplicated(cmama2)
cmama2$diagnostico <- factor(cmama2$diagnostico,
levels = c("B", "M"),
labels = c(0, 1))
class(cmama2$diagnostico)
colnames(cmama2)
colnames(cmama2) <- c("diagnostico", "radio_medio", "textura_media",  "perimetro_medio","area_media", "uniformidad_media", "compactabilidad_media", "concavidad_media", "puntos_concavos_medios", "simetria_media", "dimension_fractal_media")
colnames(cmama2)
modelo_reg_log <- glm(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, family = binomial(link = "logit"))
modelo_reg_log <- glm(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, family = binomial(link = "logit"), data = cmama2)
modelo_reg_log <- glm(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, family = binomial(link = "logit"), data = cmama2)
modelo_reg_log <- glm(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, family = binomial(link = "probit"), data = cmama2)
modelo_reg_log <- glm(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, family = binomial(link = "logit"), data = cmama2)
summary(modelo_reg_log)
summary(modelo_reg_log)
hatvalues(modelo_reg_log)
warnings()
hatvalues(modelo_reg_log)
influence.measures(modelo_reg_log)
library(olsrr)
ols_step_best_subset(modelo_reg_log)
rm(list = ls())
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
cmama <- read.csv("data.csv")
View(cmama)
##Variables
colnames(cmama)
cmama2 <- cmama[,c(2:12)] #Recorte de datos
colnames(cmama2) #Lista de variables
colnames(cmama2) <- c("diagnostico", "radio_medio", "textura_media",  "perimetro_medio","area_media", "uniformidad_media", "compactabilidad_media", "concavidad_media", "puntos_concavos_medios", "simetria_media", "dimension_fractal_media")
colnames(cmama2)
cmama2$diagnostico <- factor(cmama2$diagnostico,
levels = c("B", "M"),
labels = c(0, 1))
class(cmama2$diagnostico)
##Valores faltantes o duplicados
anyNA(cmama2) #No hay NAs
anyDuplicated(cmama2) #No hay elementos duplicados
modelo_reg_log <- glm(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, family = binomial(link = "logit"), data = cmama2)
summary(modelo_reg_log)
scatterplotMatrix(cmama2, pch = 19)# Vemos colinealidad en las gráficas. Medidas remedio para la colinealidad.
scatterplotMatrix(cmama2, pch = 19)# Vemos colinealidad en las gráficas. Medidas remedio para la colinealidad.
#Diagnostico: vif()
vif(modelo_reg_log)
#Diagnostico: vif()
vif(modelo_reg_log, type = "predictor")
#Diagnostico: vif()
vif(modelo_reg_log)
modelo <-
glm(
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
summary(modelo)
scatterplotMatrix(cmama2, pch = 19)# Vemos colinealidad en las gráficas. Medidas remedio para la colinealidad.
#Diagnostico: vif()
vif(modelo)
scatterplotMatrix(cmama2, pch = 19)# Vemos colinealidad en las gráficas. Medidas remedio para la colinealidad.
scatterplotMatrix(cmama2, pch = 19)# Vemos colinealidad en las gráficas. Medidas remedio para la colinealidad.
colnames(cmama2)
library(FactoMineR)
PCA(cmama2)
as.integer(cmama2$diagnostico)
cmama2$diagnostico
as.numeric(cmama2$diagnostico)
as.double (cmama2$diagnostico)
cmama2$diagnostico
as.data.frame.numeric(cmama2$diagnostico)
as.data.frame.integer(cmama2$diagnostico)
cmama2$diagnostico <- as.data.frame.integer(cmama2$diagnostico)
cmama2
cmama2
View(cmama2)
cmama2$diagnostico
cmama2
colnames(cmama2)
as.double (cmama2$diagnostico)
as.integer (cmama2$diagnostico)
cmama <- read.csv("data.csv")
View(cmama)
##Variables
colnames(cmama)
cmama2 <- cmama[, c(2:12)] #Recorte de datos
colnames(cmama2) #Lista de variables
colnames(cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media", "dimension_fractal_media")
colnames(cmama2)
as.double(cmama2$diagnostico)
ifelse(cmama2$diagnostico == "B", 0, 1)
class (ifelse(cmama2$diagnostico == "B", 0, 1))
table(cmama2$diagnostico)
table (class (ifelse(cmama2$diagnostico == "B", 0, 1)))
table(ifelse(cmama2$diagnostico == "B", 0, 1))
cmama2$diagnostico <- ifelse(cmama2$diagnostico == "B", 0, 1)
table(cmama2$diagnostico)
##Valores faltantes o duplicados
anyNA(cmama2) #No hay NAs
anyDuplicated(cmama2) #No hay elementos duplicados
PCA (cmama2)
PCA (cmama2)
cmama2
PCA(cmama2)
PCA(cmama2)
rm(list = ls())
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
cmama <- read.csv ("data.csv")
View (cmama)
##Variables
colnames (cmama)
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) #Lista de variables
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media", "dimension_fractal_media")
colnames (cmama2)
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
table (cmama2$diagnostico)
##Valores faltantes o duplicados
anyNA (cmama2) #No hay NAs
anyDuplicated (cmama2) #No hay elementos duplicados
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
summary (modelo)
scatterplotMatrix (cmama2, pch = 19) # Vemos colinealidad en las gráficas. Medidas remedio para la colinealidad.
PCA(cmama2)
PCA(cmama2$var)
PCA(cmama2)$var
PCA(cmama2)$var
stepwise(modelo)
warnings(stepwise(modelo))
typeof(cmama2)
class(cmama2)
source("~/GitHub/TP-Reg-Log/Cancer de mama - Sueño.R", echo=TRUE)
View(stepwise(modelo))
print(stepwise(modelo))
PCA(cmama2)
PCA(cmama2)
PCA(cmama2)
rm(list = ls())
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
cmama <- read.csv ("data.csv")
View (cmama)
##Variables
colnames (cmama)
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) #Lista de variables
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media", "dimension_fractal_media")
colnames (cmama2)
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
table (cmama2$diagnostico)
##Valores faltantes o duplicados
anyNA (cmama2) #No hay NAs
anyDuplicated (cmama2) #No hay elementos duplicados
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
summary (modelo)
#Diagnostico: vif()
vif (modelo)
PCA(cmama2)
PCA(cmama2)$call
PCA(cmama2)$eigen
PCA(cmama2)$eig
PCA(cmama2[,-1])
PCA(cmama2[,-1])$eig
var(cmama2[,-1])
mvarcov <- var(cmama2[,-1])
eigen(mvarcov)
factanal(cmama2[,-1])
factanal(cmama2[,-1], 5)
factanal(cmama2[,-1], 4)
factanal(cmama2[,-1], 2)
factanal(cmama2[,-1], 3)
PCA(cmama2)$eig
PCA(cmama2[,-1])$eig
colnames(cmama[,-1])
colnames(cmama2[,-1])
PCA(cmama2[,-1])
PCA(cmama2[,-1])$var
eigen(cmama2[,-1])
mvarcovcmama2 <- var(cmama2)
mvarcovcmama2 <- var(cmama2[,-1])
eigen(mvarcovcmama2[,-1])
mvarcovcmama2 <- var(cmama2[,-1])
eigen(mvarcovcmama2[,-1])
mvarcovcmama2
dim(mvarcovcmama2)
eigen(mvarcovcmama2)
comp1 <- eigen(mvarcovcmama2)$vectors[,1] %*% cmama2[,-1]
eigen(mvarcovcmama2)$vectors
eigen(mvarcovcmama2)$vectors[,1]
cmama2[,-1]
comp1 <- eigen(mvarcovcmama2)$vectors[,1] %*% cmama2[,-1]
comp1 <- eigen(mvarcovcmama2)$vectors[,1] %*% as.matrix(cmama2[,-1])
dim(eigen(mvarcovcmama2)$vectors[,1])
dim(cmama2[,-1])
dim(as.matrix(eigen(mvarcovcmama2)$vectors[,1]))
factanal(cmama2[,-1], 3)
factanal(cmama2[,-1], 4)
library(MASS)
colnames(cmama2)
lm.ridge(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, cmama2)
lm.ridge(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, cmama2, lambda = 1)
ridge1 <- lm.ridge(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, cmama2, lambda = 0)
vif(ridge1)
rm(list = ls())
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
cmama <- read.csv ("data.csv")
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media", "dimension_fractal_media")
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
ridge1 <- lm.ridge(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, cmama2, lambda = 0)
vif(ridge1)
ridge1 <- lm.ridge(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, cmama2, lambda = 1)
vif(ridge1)
ridge1 <- lm.ridge(diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media, cmama2, lambda = 0)
vif(ridge1, type = "predictor")
#Diagnostico: vif()
vif (modelo)
stepwise(modelo)
modelo_aic <- glm(diagnostico ~ textura_media + area_media + puntos_concavos_medios, family = binomial(link = "logit"), cmama2)
vif(modelo_aic)
summary(modelo_aic)
summary(modelo_aic)$r.squared
stepwise(modelo)
summary(modelo_aic)
