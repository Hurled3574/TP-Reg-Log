cmama3 %>%
select(-diagnostico) %>%
cor()
modelo1 <-
glm (
diagnostico ~ .,
family = binomial(link = "logit"),
data = cmama3
)
summary (modelo1)
stepwise(modelo1, direction='forward', criterion='AIC')
modelos <-
glmulti::glmulti(diagnostico ~ ., data = cmama3,
level = 1,               # No hay interacciones
method = "h",            # Analisis exhaustivo
crit = "aic",            # AIC como criterio
confsetsize = 5,         # Se queda con los mejores 5 modelos
plotty = T, report = T,  # Sin dibujo ni reporte
fitfunction = "glm",     # glm function
family = binomial(link = "logit"))  # Familia de la binomial
modelo2 <-
glm (
diagnostico ~ textura_media + puntos_concavos_medios + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama3
)
summary (modelo2)
vif(modelo2)
exp(cbind(coef(modelo2),confint.default(modelo2)))
referencia <- cmama3$diagnostico
prediccion <- predict(modelo2, type="response")
curva <- roc(referencia, prediccion)
plot(1-curva$specificities, curva$sensitivities, type="l",xlab="1-Especificidad",ylab="Sensibilidad",lwd=2,col="blue",xaxs="i",yaxs="i")
segments(0,0,1,1,lwd=2,col="red")
# Area bajo la curva ROC
(areaRoc<-auc(referencia, prediccion)); ci(areaRoc)
(opt <- coords(curva, "best", ret=c("threshold", "specificity", "sensitivity", "accuracy",
"tn", "tp", "fn", "fp")))
# Según corte óptimo de corte por Youden
prediccion_clases <- ifelse(prediccion > opt$threshold, 1, 0)
confusionMatrix(data = factor(prediccion_clases), reference = factor(cmama3$diagnostico), positive = "1")
class(cmama2$diagnostico)
modelo <-
glm (
as.factor(diagnostico) ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
modelo <-
glm (
as.factor(cmama2$diagnostico) ~ cmama2$radio_medio + cmama2$textura_media + cmama2$perimetro_medio + cmama2$area_media + cmama2$uniformidad_media + cmama2$compactabilidad_media + cmama2$concavidad_media + cmama2$puntos_concavos_medios + cmama2$simetria_media + cmama2$dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
as.factor(cmama2$diagnostico)
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
```{r warning=FALSE}
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
library(tidyverse)
library(magrittr)
library(caret)
library(pROC)
library(ROCR)
library(glmulti)
download.file("https://archive.ics.uci.edu/static/public/17/breast+cancer+wisconsin+diagnostic.zip", "data/breast+cancer+wisconsin+diagnostic.zip")
unzip("data/breast+cancer+wisconsin+diagnostic.zip", exdir = "data")
cmama <- read.csv ("data/wdbc.data", header = FALSE)
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media",
"dimension_fractal_media")
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
glimpse(cmama2)
cmama2 %>%
ggplot(aes(x = factor(diagnostico), fill = factor(diagnostico))) +
geom_bar() +
theme_minimal() +
theme(legend.position = "none") +
geom_text(stat = "count", aes(label = ..count..), vjust = 2)
cmama2 %>%
gather(key = "variable", value = "value", -diagnostico) %>%
ggplot(aes(x = value, fill = factor(diagnostico))) +
geom_density(alpha = 0.5) +
facet_wrap(~variable, scales = "free") +
theme_minimal() +
theme(legend.position = "none")
anyNA (cmama2) #No hay valores faltantes
anyDuplicated (cmama2) #No hay elementos duplicados
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
gather(key = "variable2", value = "correlacion", -variable) %>%
transmute(variables=paste(pmin(variable, variable2), "-", pmax(variable, variable2)), correlacion) %>%
distinct() %>%
filter(correlacion > 0.7, correlacion < 1) %>%
arrange(desc(correlacion))
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
stepwise(modelo)
modelo_aic <- glm(diagnostico ~ textura_media + area_media + puntos_concavos_medios, family = binomial(link = "logit"), cmama2)
cmama2 %>%
select(perimetro_medio, radio_medio, area_media, puntos_concavos_medios, compactabilidad_media, concavidad_media) %>%
cor() %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
gather(key = "variable2", value = "correlacion", -variable) %>%
filter(correlacion < 1) %>%
group_by(variable) %>% summarise(correlacion_media = mean(correlacion)) %>%
arrange(desc(correlacion_media))
cmama3 <- cmama2 %>%
select(-perimetro_medio, -radio_medio, -area_media, -concavidad_media, -compactabilidad_media)
cmama3 %>%
select(-diagnostico) %>%
cor() %>%
corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)
cmama3 %>%
select(-diagnostico) %>%
cor()
modelo1 <-
glm (
diagnostico ~ .,
family = binomial(link = "logit"),
data = cmama3
)
summary (modelo1)
stepwise(modelo1, direction='forward', criterion='AIC')
modelos <-
glmulti::glmulti(diagnostico ~ ., data = cmama3,
level = 1,               # No hay interacciones
method = "h",            # Analisis exhaustivo
crit = "aic",            # AIC como criterio
confsetsize = 5,         # Se queda con los mejores 5 modelos
plotty = T, report = T,  # Sin dibujo ni reporte
fitfunction = "glm",     # glm function
family = binomial(link = "logit"))  # Familia de la binomial
modelo2 <-
glm (
diagnostico ~ textura_media + puntos_concavos_medios + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama3
)
summary (modelo2)
vif(modelo2)
exp(cbind(coef(modelo2),confint.default(modelo2)))
referencia <- cmama3$diagnostico
prediccion <- predict(modelo2, type="response")
curva <- roc(referencia, prediccion)
plot(1-curva$specificities, curva$sensitivities, type="l",xlab="1-Especificidad",ylab="Sensibilidad",lwd=2,col="blue",xaxs="i",yaxs="i")
segments(0,0,1,1,lwd=2,col="red")
# Area bajo la curva ROC
(areaRoc<-auc(referencia, prediccion)); ci(areaRoc)
(opt <- coords(curva, "best", ret=c("threshold", "specificity", "sensitivity", "accuracy",
"tn", "tp", "fn", "fp")))
# Según corte óptimo de corte por Youden
prediccion_clases <- ifelse(prediccion > opt$threshold, 1, 0)
confusionMatrix(data = factor(prediccion_clases), reference = factor(cmama3$diagnostico), positive = "1")
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
library(tidyverse)
library(magrittr)
library(caret)
library(pROC)
library(ROCR)
library(glmulti)
download.file("https://archive.ics.uci.edu/static/public/17/breast+cancer+wisconsin+diagnostic.zip", "data/breast+cancer+wisconsin+diagnostic.zip")
unzip("data/breast+cancer+wisconsin+diagnostic.zip", exdir = "data")
cmama <- read.csv ("data/wdbc.data", header = FALSE)
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media",
"dimension_fractal_media")
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
glimpse(cmama2)
cmama2 %>%
ggplot(aes(x = factor(diagnostico), fill = factor(diagnostico))) +
geom_bar() +
theme_minimal() +
theme(legend.position = "none") +
geom_text(stat = "count", aes(label = ..count..), vjust = 2)
cmama2 %>%
gather(key = "variable", value = "value", -diagnostico) %>%
ggplot(aes(x = value, fill = factor(diagnostico))) +
geom_density(alpha = 0.5) +
facet_wrap(~variable, scales = "free") +
theme_minimal() +
theme(legend.position = "none")
anyNA (cmama2) #No hay valores faltantes
anyDuplicated (cmama2) #No hay elementos duplicados
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
gather(key = "variable2", value = "correlacion", -variable) %>%
transmute(variables=paste(pmin(variable, variable2), "-", pmax(variable, variable2)), correlacion) %>%
distinct() %>%
filter(correlacion > 0.7, correlacion < 1) %>%
arrange(desc(correlacion))
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
stepwise(modelo)
modelo_aic <- glm(diagnostico ~ textura_media + area_media + puntos_concavos_medios, family = binomial(link = "logit"), cmama2)
modelo_aic <- glm(diagnostico ~ textura_media + area_media + puntos_concavos_medios, family = binomial(link = "logit"), cmama2)
vif(modelo_aic)
summary(modelo_aic)
# Nueva exploración de los datos
cmama3 <- cmama2[, c(1, 3, 5, 9)]
modelo1 <-
glm (
diagnostico ~ .,
family = binomial(link = "logit"),
data = cmama3
)
summary (modelo1)
stepwise(modelo1, direction='forward', criterion='AIC')
modelos <-
glmulti::glmulti(diagnostico ~ ., data = cmama3,
level = 1,               # No hay interacciones
method = "h",            # Analisis exhaustivo
crit = "aic",            # AIC como criterio
confsetsize = 5,         # Se queda con los mejores 5 modelos
plotty = T, report = T,  # Sin dibujo ni reporte
fitfunction = "glm",     # glm function
family = binomial(link = "logit"))  # Familia de la binomial
modelo2 <-
glm (
diagnostico ~ textura_media + puntos_concavos_medios + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama3
)
cmama3 <- cmama2[, c(1, 3, 5, 9)]
modelo_aic <- glm(diagnostico ~ ., family = binomial(link = "logit"), cmama3)
vif(modelo_aic)
# Nueva exploración de los datos
stepwise(modelo)
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
library(tidyverse)
library(magrittr)
library(caret)
library(pROC)
library(ROCR)
library(glmulti)
download.file("https://archive.ics.uci.edu/static/public/17/breast+cancer+wisconsin+diagnostic.zip", "data/breast+cancer+wisconsin+diagnostic.zip")
unzip("data/breast+cancer+wisconsin+diagnostic.zip", exdir = "data")
cmama <- read.csv ("data/wdbc.data", header = FALSE)
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media",
"dimension_fractal_media")
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
glimpse(cmama2)
cmama2 %>%
ggplot(aes(x = factor(diagnostico), fill = factor(diagnostico))) +
geom_bar() +
theme_minimal() +
theme(legend.position = "none") +
geom_text(stat = "count", aes(label = ..count..), vjust = 2)
cmama2 %>%
gather(key = "variable", value = "value", -diagnostico) %>%
ggplot(aes(x = value, fill = factor(diagnostico))) +
geom_density(alpha = 0.5) +
facet_wrap(~variable, scales = "free") +
theme_minimal() +
theme(legend.position = "none")
anyNA (cmama2) #No hay valores faltantes
anyDuplicated (cmama2) #No hay elementos duplicados
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
gather(key = "variable2", value = "correlacion", -variable) %>%
transmute(variables=paste(pmin(variable, variable2), "-", pmax(variable, variable2)), correlacion) %>%
distinct() %>%
filter(correlacion > 0.7, correlacion < 1) %>%
arrange(desc(correlacion))
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
stepwise(modelo)
cmama3 <- cmama2[, c(1, 3, 5, 9)]
modelo_aic <- glm(diagnostico ~ ., family = binomial(link = "logit"), cmama3)
summary(modelo_aic)
vif(modelo_aic)
vif(modelo_aic)
exp(cbind(coef(modelo_aic),confint.default(modelo_aic)))
referencia <- cmama3$diagnostico
prediccion <- predict(modelo_aic, type="response")
curva <- roc(referencia, prediccion)
plot(1-curva$specificities, curva$sensitivities, type="l",xlab="1-Especificidad",ylab="Sensibilidad",lwd=2,col="blue",xaxs="i",yaxs="i")
segments(0,0,1,1,lwd=2,col="red")
# Area bajo la curva ROC
(areaRoc<-auc(referencia, prediccion)); ci(areaRoc)
(opt <- coords(curva, "best", ret=c("threshold", "specificity", "sensitivity", "accuracy",
"tn", "tp", "fn", "fp")))
# Según corte óptimo de corte por Youden
prediccion_clases <- ifelse(prediccion > opt$threshold, 1, 0)
confusionMatrix(data = factor(prediccion_clases), reference = factor(cmama3$diagnostico), positive = "1")
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
library(tidyverse)
library(magrittr)
library(caret)
library(pROC)
library(ROCR)
library(glmulti)
download.file("https://archive.ics.uci.edu/static/public/17/breast+cancer+wisconsin+diagnostic.zip", "data/breast+cancer+wisconsin+diagnostic.zip")
unzip("data/breast+cancer+wisconsin+diagnostic.zip", exdir = "data")
cmama <- read.csv ("data/wdbc.data", header = FALSE)
cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) <-
c(
"diagnostico",
"radio_medio",
"textura_media",
"perimetro_medio",
"area_media",
"uniformidad_media",
"compactabilidad_media",
"concavidad_media",
"puntos_concavos_medios",
"simetria_media",
"dimension_fractal_media")
cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)
glimpse(cmama2)
cmama2 %>%
ggplot(aes(x = factor(diagnostico), fill = factor(diagnostico))) +
geom_bar() +
theme_minimal() +
theme(legend.position = "none") +
geom_text(stat = "count", aes(label = ..count..), vjust = 2)
cmama2 %>%
gather(key = "variable", value = "value", -diagnostico) %>%
ggplot(aes(x = value, fill = factor(diagnostico))) +
geom_density(alpha = 0.5) +
facet_wrap(~variable, scales = "free") +
theme_minimal() +
theme(legend.position = "none")
anyNA (cmama2) #No hay valores faltantes
anyDuplicated (cmama2) #No hay elementos duplicados
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)
cmama2 %>%
select(-diagnostico) %>%
cor() %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
gather(key = "variable2", value = "correlacion", -variable) %>%
transmute(variables=paste(pmin(variable, variable2), "-", pmax(variable, variable2)), correlacion) %>%
distinct() %>%
filter(correlacion > 0.7, correlacion < 1) %>%
arrange(desc(correlacion))
#Diagnóstico de los datos
modelo <-
glm (
diagnostico ~ radio_medio + textura_media + perimetro_medio + area_media + uniformidad_media + compactabilidad_media + concavidad_media + puntos_concavos_medios + simetria_media + dimension_fractal_media,
family = binomial(link = "logit"),
data = cmama2
)
#Diagnostico: colinealidad
vif (modelo)
stepwise(modelo)
cmama3 <- cmama2[, c(1, 3, 5, 9)]
modelo_aic <- glm(diagnostico ~ ., family = binomial(link = "logit"), cmama3)
summary(modelo_aic)
vif(modelo_aic)
vif(modelo_aic)
exp(cbind(coef(modelo_aic),confint.default(modelo_aic)))
referencia <- cmama3$diagnostico
prediccion <- predict(modelo_aic, type="response")
curva <- roc(referencia, prediccion)
plot(1-curva$specificities, curva$sensitivities, type="l",xlab="1-Especificidad",ylab="Sensibilidad",lwd=2,col="blue",xaxs="i",yaxs="i")
segments(0,0,1,1,lwd=2,col="red")
# Area bajo la curva ROC
(areaRoc<-auc(referencia, prediccion)); ci(areaRoc)
(opt <- coords(curva, "best", ret=c("threshold", "specificity", "sensitivity", "accuracy",
"tn", "tp", "fn", "fp")))
# Según corte óptimo de corte por Youden
prediccion_clases <- ifelse(prediccion > opt$threshold, 1, 0)
confusionMatrix(data = factor(prediccion_clases), reference = factor(cmama3$diagnostico), positive = "1")
install.packages("DescTools")
library(DescTools)
library(DescTools)
PseudoR2(modelo_aic, which = "all")
summary(modelo_aic)$r.squared
summary(modelo_aic)
PseudoR2(modelo_aic, which = "all")
PseudoR2( modelo_aic, which = c("Nagelkerke", "AIC") )
HosmerLemeshowTest(modelo_aic, cmama3$diagnostico)
HosmerLemeshowTest(modelo_aic, diagnostico)
HosmerLemeshowTest(modelo_aic)
HosmerLemeshowTest(modelo_aic, diagnostico)
HosmerLemeshowTest(fit = fitted(modelo_aic), obs = cmama3$diagnostico)
PseudoR2(modelo_aic, which = c("Nagelkerke"))
