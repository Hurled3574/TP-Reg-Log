---
title: "Informe - Trabajo Práctico Regresión Logística - AyME"
author: "ASSANELLI Franco"
format: html
editor: visual
---

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(corrplot)
library(olsrr)
library(wooldridge)
library(lmtest)
library(RcmdrMisc)
library(car)
library(FactoMineR)
library(MASS)
library(tidyverse)
library(magrittr)
library(caret)
library(pROC)
library(ROCR)
library(glmulti)
```

# Cáncer de mama

## Resumen

Se ha desarrollado un sistema de diagnóstico de tumores de mama mediante técnicas interactivas de procesamiento de imágenes y un clasificador basado en programación lineal. El sistema analiza el tamaño, la forma y la textura del núcleo para calcular diez características para cada núcleo. Al probar diferentes combinaciones de características, el estudio logró una precisión del 97% al distinguir entre muestras benignas y malignas. Unas 569 imágenes se han de procesado de esta manera obteniendo las 10 variables para cada una de ellas. El objetivo de este trabajo es desarrollar un modelo de regresión logística que permita predecir si un tumor es benigno o maligno en base a las variables obtenidas.

## Introducción

La siguiente base de datos contiene información sobre 569 tumores de mama, de los cuales 357 son benignos y 212 son malignos. Para cada uno de ellos se registraron 32 variables, de las cuales 30 son numéricas y 2 son categóricas. Las variables numéricas son medidas obtenidas a partir de imágenes digitalizadas de los tumores, mientras que las variables categóricas son el diagnóstico (benigno o maligno) y el identificador del paciente. De las 30 variables numéricas, 10 son medidas obtenidas a partir de la media de las imágenes, 10 son medidas obtenidas a partir del error estándar de las imágenes y 10 son medidas obtenidas a partir del peor valor de las imágenes. Para este trabajo se utilizarán las variables obtenidas a partir de la media de las imágenes para desarrollar un modelo de regresión logística que permita predecir la variable categórica diagnóstico.

## Carga de datos

Obtenemos la base de datos de la siguiente dirección: https://archive.ics.uci.edu/dataset/17/breast+cancer+wisconsin+diagnostic. La misma se encuentra comprimida y dentro en formato csv. La cargamos en R y la guardamos en un objeto manteniendo sólo las columnas que nos interesan con nombres más cortos y descriptivos en castellano.

```{r}

download.file("https://archive.ics.uci.edu/static/public/17/breast+cancer+wisconsin+diagnostic.zip", "data/breast+cancer+wisconsin+diagnostic.zip")

unzip("data/breast+cancer+wisconsin+diagnostic.zip", exdir = "data")

cmama <- read.csv ("data/wdbc.data", header = FALSE)

cmama2 <- cmama [, c(2:12)] #Recorte de datos
colnames (cmama2) <-
  c(
    "diagnostico",
    "radio_medio",
    "textura_media",
    "perimetro_medio",
    "area_media",
    "uniformidad_media",
    "compactabilidad_media",
    "concavidad_media",
    "puntos_concavos_medios",
    "simetria_media", 
    "dimension_fractal_media")

cmama2$diagnostico <- ifelse (cmama2$diagnostico == "B", 0, 1)

glimpse(cmama2)
```

## Análisis exploratorio

La variable dependiente es la variable categórica *diagnóstico*, que toma el valor 0 si el tumor es benigno y 1 si el tumor es maligno.

```{r}
cmama2 %>%
  ggplot(aes(x = factor(diagnostico), fill = factor(diagnostico))) +
  geom_bar() +
  theme_minimal() +
  theme(legend.position = "none") +
  geom_text(stat = "count", aes(label = ..count..), vjust = 2)
```

Las 10 variables numéricas continuas independientes refieren a:

a)  radio (media de las distancias desde el centro hasta puntos en el perímetro)
b)  textura (desviación estándar de los valores de escala de grises)
c)  perímetro
d)  área
e)  suavidad (variación local en longitudes de radio)
f)  compacidad (perímetro\^2 / área - 1.0)
g)  concavidad (severidad de porciones cóncavas del contorno)
h)  puntos cóncavos (número de porciones cóncavas del contorno)
i)  simetría
j)  dimensión fractal ("aproximación de la línea costera" - 1)

```{r}
cmama2 %>%
  gather(key = "variable", value = "value", -diagnostico) %>%
  ggplot(aes(x = value, fill = factor(diagnostico))) +
  geom_density(alpha = 0.5) +
  facet_wrap(~variable, scales = "free") +
  theme_minimal() +
  theme(legend.position = "none")
```

## Correlación entre variables

Analizamos la correlación entre las variables independientes.

```{r}
cmama2 %>%
  select(-diagnostico) %>%
  cor() %>%
  corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)
```

Observamos, por ejemplo, que las variables radio, perímetro y área están altamente correlacionadas entre sí. Decidimos listar las correlaciones más altas para ver si hay alguna que sea mayor a 0.7.

```{r}
cmama2 %>%
  select(-diagnostico) %>%
  cor() %>%
  as.data.frame() %>%
  rownames_to_column(var = "variable") %>%
  gather(key = "variable2", value = "correlacion", -variable) %>%
  transmute(variables=paste(pmin(variable, variable2), "-", pmax(variable, variable2)), correlacion) %>%
  distinct() %>%
  filter(correlacion > 0.7, correlacion < 1) %>%
  arrange(desc(correlacion))
```

De estas variables fuertemente correlacionadas entre sí, decidimos quedarnos con una de ellas en base a su mayor correlacion con todas las demás.

```{r}
cmama2 %>%
  select(perimetro_medio, radio_medio, area_media, puntos_concavos_medios, compactabilidad_media, concavidad_media) %>%
  cor() %>%
  as.data.frame() %>%
  rownames_to_column(var = "variable") %>%
  gather(key = "variable2", value = "correlacion", -variable) %>%
  filter(correlacion < 1) %>%
  group_by(variable) %>% summarise(correlacion_media = mean(correlacion)) %>% 
  arrange(desc(correlacion_media))
```

Decidimos mantener puntos_concavos_medios y eliminar las demás variables altamente correlacionadas con ella.

```{r}
cmama3 <- cmama2 %>%
  select(-perimetro_medio, -radio_medio, -area_media, -concavidad_media, -compactabilidad_media)

cmama3 %>%
  select(-diagnostico) %>%
  cor() %>%
  corrplot(method = "circle", type = "upper", tl.col = "black", tl.srt = 45)

cmama3 %>%
  select(-diagnostico) %>%
  cor()
```

## Postulación del modelo

```{r}
modelo1 <-
  glm (
    diagnostico ~ .,
    family = binomial(link = "logit"),
    data = cmama3
  )

summary (modelo1)
```

Realizamos una eliminación paso a paso de las variables no significativas.

```{r}
stepwise(modelo1, direction='forward', criterion='AIC')
```

Realizamos un análisis exhaustivo de los modelos posibles, con el criterio de información de Akaike (AIC) como criterio de selección.

```{r}
modelos <-
  glmulti::glmulti(diagnostico ~ ., data = cmama3,
          level = 1,               # No hay interacciones
          method = "h",            # Analisis exhaustivo
          crit = "aic",            # AIC como criterio
          confsetsize = 5,         # Se queda con los mejores 5 modelos
          plotty = T, report = T,  # Sin dibujo ni reporte
          fitfunction = "glm",     # glm function
          family = binomial(link = "logit"))  # Familia de la binomial
```

Con ambas técnicas, se obtiene el mismo modelo. Nos quedamos con el modelo final simplificado, eliminando la variables no significativas simetria_media y uniformidad_media.

```{r}
modelo2 <-
  glm (
    diagnostico ~ textura_media + puntos_concavos_medios + dimension_fractal_media,
    family = binomial(link = "logit"),
    data = cmama3
  )

summary (modelo2)
```

## Verificación del modelo

Verificamos que el factor de inflación de la varianza (VIF) de cada variable sea menor a 5.

```{r}
vif(modelo2)
```

## Interpretación del modelo

Coeficientes e intervalos de confianza para cada variable predictora.

```{r}
exp(cbind(coef(modelo2),confint.default(modelo2)))
```

## Predicción del modelo

Predicción de la probabilidad de que el tumor sea maligno.

```{r}
referencia <- cmama3$diagnostico
prediccion <- predict(modelo2, type="response")
```

Curva ROC y área bajo la curva ROC.

```{r}
curva <- roc(referencia, prediccion)
plot(1-curva$specificities, curva$sensitivities, type="l",xlab="1-Especificidad",ylab="Sensibilidad",lwd=2,col="blue",xaxs="i",yaxs="i")
segments(0,0,1,1,lwd=2,col="red")

# Area bajo la curva ROC
(areaRoc<-auc(referencia, prediccion)); ci(areaRoc)
```

Corte óptimo de la curva ROC

```{r}
(opt <- coords(curva, "best", ret=c("threshold", "specificity", "sensitivity", "accuracy",
                                  "tn", "tp", "fn", "fp")))
```

Tabla de clasificación

```{r}
# Según corte óptimo de corte por Youden
prediccion_clases <- ifelse(prediccion > opt$threshold, 1, 0)
confusionMatrix(data = factor(prediccion_clases), reference = factor(cmama3$diagnostico), positive = "1")
```
